#app:
#  name: @project.artifactId@
#  version: @project.version@

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:mysql://localhost:3306/order-service?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: password
  jpa:
#    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#        format_sql: true
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    ssl:
      enabled: false
    listener:
      simple:
        concurrency: 4
        retry:
          initial-interval: 5000
        max-concurrency: 8

server:
  port: 8200
# Consul
#spring.cloud.consul.host=localhost
#spring.cloud.consul.port=8500
# Spring cloud and Eureka
#spring.cloud.discovery.enabled=true
#eureka.instance.hostname=localhost
#eureka.instance.lease-renewal-interval-in-seconds=300
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.default-zone=http://localhost:8761/eureka/
# logging level
logging:
  level:
    org.springframework.web: info
    com.rks.orderservice: debug
#    org:
#      hibernate:
#        SQL: debug
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE

#logging.level.com.rks.orderservice.service.impl.OrderServiceImpl=info
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter = debug
#logging.level.org.springframework.web = error
#logging.level.com.rks.orderservice = error

#logging.level.org.hibernate.type=TRACE
#healthcheck threadpool configs
#healthcheck.core.pool.size                               = 1
#healthcheck.max.pool.size                                = 2
#healthcheck.queue.size                                   = 2
#healthcheck.timeout                                      = 250000
# spring-boot admin client configuration
## Enable the SBA Client by configuring the URL of the Spring Boot Admin Server
# spring.boot.admin.client.url=http://localhost:8989
# management.endpoints.web.exposure.include=*

# AMQP RabbitMQ configuration
rabbitmq:
  enabled: true
  queueName: orderservice-queue
# Message Queue specific configs for app1
orderservice:
  exchange.name: orderservice-exchange
  queue.name: orderservice-queue
  routing.key: orderservice-routing-key

# Order creation queue config
#order-created.exchange.name=order-created-exchange
#order-created.queue.name=order-service-queue
#order-created.routing.key=order-created-routing-key
# Maximum number of connections that the server will accept and process at any given time.
#server.tomcat.max-connections=400
## Maximum amount of worker threads.
#server.tomcat.max-threads=200
## Minimum amount of worker threads.
#server.tomcat.min-spare-threads=25
##Access Logs
#server.tomcat.accesslog.enabled=true
##server.tomcat.accesslog.pattern                          = [%{yyyy-MM-dd HH:mm:ss.SSS}t] %h \"%r\" %s %b %Dms \"%{Referer}i\" \"%{User-agent}i\" \"%{requestIdLogging}r\"
#server.tomcat.accesslog.directory=/Users/ravendrasingh/log/order-service
#server.tomcat.accesslog.prefix=${HOSTNAME}_access
#server.tomcat.accesslog.rotate=true
#server.tomcat.accesslog.rename-on-rotate=true
#server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
#server.tomcat.accesslog.buffered=false
#server.tomcat.accesslog.request-attributes-enabled=true
## zipkin
##spring.zipkin.base-url=http://localhost:9411/
## Actuator
#management.endpoints.web.exposure.include=*
#management.info.build.enabled=true
#management.info.env.enabled=true
#management.info.git.enabled=true
## Jackson Mapper
#spring.jackson.time-zone=Asia/Kolkata
#spring.jackson.locale=en_IN
#
#spring.sleuth.enabled=true

orderserviceconfig:
  localclientConfig:
    certificatePath: /Users/ravendrasingh/projects/data/certs
    certFileName: "Ravendra_Singh.cer"
    certificatePassword: test123
debug: true