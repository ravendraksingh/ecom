app.name=@project.artifactId@
app.version=@project.version@

spring.application.name=order-service

#### Spring clound config
#spring.config.import=optional:configserver:http://localhost:8888

server.port=8200
## Consul
#spring.cloud.consul.host=localhost
#spring.cloud.consul.port=8500

# Spring cloud and Eureka
#spring.cloud.discovery.enabled=true
#eureka.instance.hostname=localhost
#eureka.instance.lease-renewal-interval-in-seconds=300
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.default-zone=http://localhost:8761/eureka/

# logging level
logging.level.org.springframework.web=info
logging.level.com.rks.orderservice=debug
#logging.level.com.rks.orderservice.service.impl.OrderServiceImpl=info
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter = debug
#logging.level.org.springframework.web = error
#logging.level.com.rks.orderservice = error

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:mysql://localhost:3306/order-service?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=password
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
logging.level.org.hibernate.SQL=error
#logging.level.org.hibernate.type=TRACE

#healthcheck threadpool configs
#healthcheck.core.pool.size                               = 1
#healthcheck.max.pool.size                                = 2
#healthcheck.queue.size                                   = 2
#healthcheck.timeout                                      = 250000

# spring-boot admin client configuration
## Enable the SBA Client by configuring the URL of the Spring Boot Admin Server
# spring.boot.admin.client.url=http://localhost:8989
# management.endpoints.web.exposure.include=*

# AMQP RabbitMQ configuration
rabbitmq.enabled=false
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

# Additional RabbitMQ properties
#spring.rabbitmq.listener.simple.concurrency=4
#spring.rabbitmq.listener.simple.max-concurrency=8
#spring.rabbitmq.listener.simple.retry.initial-interval=5000

# Message Queue specific configs for app1
#order-service.exchange.name=order-service-exchange
#order-service.queue.name=order-service-queue
#order-service.routing.key=order-service-routing-key
#rabbitmq.queueName=order-created-queue

# Order creation queue config
#order-created.exchange.name=order-created-exchange
#order-created.queue.name=order-service-queue
#order-created.routing.key=order-created-routing-key

## Maximum number of connections that the server will accept and process at any given time.
#server.tomcat.max-connections=400
## Maximum amount of worker threads.
#server.tomcat.max-threads=200
## Minimum amount of worker threads.
#server.tomcat.min-spare-threads=25

##Access Logs
#server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.pattern                          = [%{yyyy-MM-dd HH:mm:ss.SSS}t] %h \"%r\" %s %b %Dms \"%{Referer}i\" \"%{User-agent}i\" \"%{requestIdLogging}r\"
#server.tomcat.accesslog.directory=/Users/ravendrasingh/log/order-service
#server.tomcat.accesslog.prefix=${HOSTNAME}_access
#server.tomcat.accesslog.rotate=true
#server.tomcat.accesslog.rename-on-rotate=true
#server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
#server.tomcat.accesslog.buffered=false
#server.tomcat.accesslog.request-attributes-enabled=true

## zipkin
#spring.zipkin.base-url=http://localhost:9411/

## Actuator
management.endpoints.web.exposure.include=*
management.info.build.enabled=true
management.info.env.enabled=true
management.info.git.enabled=true
management.endpoint.health.show-details=always
management.health.defaults.enabled=false

## Jackson Mapper
spring.jackson.time-zone=Asia/Kolkata
spring.jackson.locale=en_IN

spring.sleuth.enabled=true
